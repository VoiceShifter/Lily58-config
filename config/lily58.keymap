/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        LeftBracket: LeftBracket {
            compatible = "zmk,behavior-mod-morph";
            label = "LEFTBRACKET";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LEFT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT)>;
        };

        RightPar: RightPar {
            compatible = "zmk,behavior-mod-morph";
            label = "RIGHTPAR";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT)>;
        };

        LeftArrow: LeftArrow {
            compatible = "zmk,behavior-mod-morph";
            label = "LEFTARROW";
            bindings = <&kp LEFT_BRACE>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT)>;
        };

        RightArrow: RightArrow {
            compatible = "zmk,behavior-mod-morph";
            label = "RIGHTARROW";
            bindings = <&kp RIGHT_BRACE>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT)>;
        };

        underscoreNminus: underscoreNminus {
            compatible = "zmk,behavior-mod-morph";
            label = "UNDERSCORENMINUS";
            bindings = <&kp UNDERSCORE>, <&kp KP_MINUS>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT)>;
        };

        delete_or_layer: delete_or_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "DELETE_OR_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <450>;
            flavor = "tap-preferred";
        };
    };

    macros {
        Copy: cutNpase {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LCTRL &kp C &kt LCTRL>;
            label = "CUTNPASE";
        };

        Cut: Cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LCTRL &kp X &kt LCTRL>;
            label = "CUT";
        };

        Paste: Paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LCTRL &kp V &kt LCTRL>;
            label = "PASTE";
        };

        LanguageSwap: LanguageSwap {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LCTRL &kp LEFT_SHIFT &kt LCTRL>;
            label = "LANGUAGESWAP";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC           &kp N1  &kp N2  &kp N3    &kp N4            &kp N5                                 &kp N6                        &kp N7        &kp N8        &kp N9   &kp N0    &kp GRAVE
&kp TAB           &kp Q   &kp W   &kp E     &kp R             &kp T                                  &kp Y                         &kp U         &kp I         &kp O    &kp P     &kp MINUS
&kp LEFT_CONTROL  &kp A   &kp S   &kp D     &kp F             &kp G                                  &kp H                         &kp J         &kp K         &kp L    &kp SEMI  &kp SQT
&kp LEFT_ALT      &kp Z   &kp X   &kp C     &kp V             &kp B           &kp LBKT     &kp RBKT  &kp N                         &kp M         &kp COMMA     &kp DOT  &kp FSLH  &kp RSHFT
                                  &kp LWIN  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp SPACE    &kp RET   &delete_or_layer 1 BACKSPACE  &kp CAPSLOCK  &kp CAPSLOCK
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans      &kp F1        &kp F2        &kp F3          &kp F4       &kp F5                        &kp F6       &kp F7             &kp F8        &kp F9          &kp F10    &kp F11
&kp GRAVE   &LeftBracket  &RightPar     &LeftArrow      &RightArrow  &Cut                          &none        &kp BACKSPACE      &kp ENTER     &kp HOME        &kp END    &kp PRINTSCREEN
&kp ESCAPE  &kp LEFT_ALT  &kp TAB       &kp LEFT_SHIFT  &kp LCTRL    &Paste                        &trans       &kp LEFT           &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT  &kp DELETE
&none       &kp HASH      &kp ASTERISK  &kp AMPERSAND   &kp PIPE     &Copy       &trans    &trans  &kp KP_PLUS  &underscoreNminus  &kp EQUAL     &kp SLASH       &none      &none
                                        &trans          &mo 2        &kp LSHIFT  &trans    &trans  &trans       &trans             &trans
            >;
        };

        layer_2 {
            bindings = <
&trans   &trans  &trans  &trans      &trans        &trans                    &trans  &trans  &trans     &trans  &trans   &trans
&trans   &trans  &trans  &kp LSHIFT  &kp LEFT_ALT  &trans                    &trans  &trans  &kp LCTRL  &trans  &trans   &trans
&kp F12  &kp F1  &kp F2  &kp F3      &kp F4        &kp F5                    &kp F6  &kp F7  &kp F8     &kp F9  &kp F10  &kp F11
&trans   &trans  &trans  &trans      &trans        &trans  &trans    &trans  &trans  &trans  &trans     &trans  &trans   &trans
                         &trans      &trans        &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
